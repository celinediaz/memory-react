{"version":3,"sources":["img/donut.svg","img/chocolate.svg","img/gummy.svg","img/cookie.svg","img/marshmallow.svg","img/lollipop.svg","img/pie.svg","img/peanut-butter.svg","img/jam.svg","img/crepe.svg","img/gingerbread.svg","img/cherry.svg","img/marshmallow-choco.svg","img/churro.svg","img/jelly-beans.svg","img/gummy-bear.svg","components/Card.js","components/Board.js","App.js","reportWebVitals.js","index.js"],"names":["Card","image","face","onclick","index","className","onClick","src","alt","Board","cards","flipCard","Array","from","map","value","elements","pic","pic2","pic3","pic4","pic5","pic6","pic7","pic8","pic9","pic10","pic11","pic12","pic13","pic14","pic15","pic16","players","player","color","winner","background","scores","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","App","useState","setFace","flipped","setFlipped","currentPlayer","setPlayer","points","setPoints","refToFlipped","setRef","flippedCards","setCards","onFlip","a","push","checkIfPair","checkWinner","console","log","pop","Promise","resolve","setTimeout","every","card","currentStyle","winnerbg","backgroundColor","style","fontSize","window","location","reload","href","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34da249b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/donut.5f092f02.svg\";","export default __webpack_public_path__ + \"static/media/chocolate.c126d5ce.svg\";","export default __webpack_public_path__ + \"static/media/gummy.6c5c31c3.svg\";","export default __webpack_public_path__ + \"static/media/cookie.79c932d1.svg\";","export default __webpack_public_path__ + \"static/media/marshmallow.9d5bd37b.svg\";","export default __webpack_public_path__ + \"static/media/lollipop.17fc0f1d.svg\";","export default __webpack_public_path__ + \"static/media/pie.142e27ba.svg\";","export default __webpack_public_path__ + \"static/media/peanut-butter.3e89e071.svg\";","export default __webpack_public_path__ + \"static/media/jam.c4e6b654.svg\";","export default __webpack_public_path__ + \"static/media/crepe.cc793208.svg\";","export default __webpack_public_path__ + \"static/media/gingerbread.15389257.svg\";","export default __webpack_public_path__ + \"static/media/cherry.30d1cfb9.svg\";","export default __webpack_public_path__ + \"static/media/marshmallow-choco.ed80cac5.svg\";","export default __webpack_public_path__ + \"static/media/churro.e3a8448f.svg\";","export default __webpack_public_path__ + \"static/media/jelly-beans.9bffb7de.svg\";","export default __webpack_public_path__ + \"static/media/gummy-bear.f788db3e.svg\";","import React from 'react'\n\nconst Card = ({image, face, onclick, index}) => {\n    return (\n        <div className={face ? 'card-container clicked': 'card-container'}  onClick={() => onclick(index)}>\n            <div className=\"card\">\n                <div className=\"front\">\n                </div>\n                <div className=\"back\">\n                    <img src={image} alt =\"card\"/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Card\n","import Card from './Card';\nimport PropTypes from 'prop-types';\nconst Board = ({cards, flipCard}) => {\n    cards = Array.from(cards);\n    return (\n        <div className=\"container\">\n            {cards.map((value, index) => {\n                return <Card key={index} image={value.image} face={value.face} onclick={flipCard} index={index}/>\n            })}\n        </div>\n    )\n}\nBoard.propTypes = {\n    cards: PropTypes.array.isRequired\n}\nexport default Board\n","import React, { useState } from 'react';\nimport { pic, pic2, pic3, pic4, pic5, pic6, pic7, pic8, pic9, pic10, pic11, pic12, pic13, pic14, pic15, pic16 } from './img';\nimport './App.css';\nimport Board from './components/Board';\nimport PropTypes from 'prop-types';\nlet elements = [{ image: pic, face: false }, { image: pic2, face: false }, { image: pic3, face: false }, { image: pic4, face: false }, { image: pic5, face: false }, { image: pic6, face: false }, { image: pic7, face: false }, { image: pic8, face: false }, { image: pic9, face: false }, { image: pic10, face: false }, { image: pic11, face: false }, { image: pic12, face: false }, { image: pic13, face: false }, { image: pic14, face: false }, { image: pic15, face: false }, { image: pic16, face: false }, { image: pic, face: false }, { image: pic2, face: false }, { image: pic3, face: false }, { image: pic4, face: false }, { image: pic5, face: false }, { image: pic6, face: false }, { image: pic7, face: false }, { image: pic8, face: false }, { image: pic9, face: false }, { image: pic10, face: false }, { image: pic11, face: false }, { image: pic12, face: false }, { image: pic13, face: false }, { image: pic14, face: false }, { image: pic15, face: false }, { image: pic16, face: false }];\nlet players = [{ player: \"player 1\", color: \"#E3637B\" }, { player: \"player 2\", color: \"#C69559\" }]\nlet winner = false;\nlet background = \"rgba(0,0,0, 0.45)\";\nlet scores = [0,0];\n// fisher & yates shuffle\nfunction shuffle(array) {\n  let currentIndex = array.length, temporaryValue, randomIndex;\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n  return array;\n}\nshuffle(elements);\n\nfunction App() {\n\n  const [cards, setFace] = useState(elements);\n  const [flipped, setFlipped] = useState([]);\n  const [currentPlayer, setPlayer] = useState(players[0]);\n  const [points, setPoints] = useState([0, 0]);\n  const [refToFlipped, setRef] = useState([]);\n  const [flippedCards, setCards] = useState([]);\n\n  const onFlip = async (index) => {\n    if (refToFlipped.length < 2) {\n      cards[index].face = true;\n      setFlipped([...flipped, cards[index]]);\n      flippedCards.push(cards[index]);\n      refToFlipped.push(index);\n      if (flippedCards.length === 2 && refToFlipped[0] !== refToFlipped[1]) {\n        await checkIfPair();\n        setFlipped([]);\n        winner = checkWinner();\n        currentPlayer === players[0] ? setPlayer(players[1]) : setPlayer(players[0]);\n      }else if(refToFlipped[0] === refToFlipped[1]){\n        console.log(\"don't select the same card...\")\n        refToFlipped.pop();\n        flippedCards.pop();\n      }\n      setFace(cards);\n    }\n  }\n\n  const checkIfPair = async () => {\n    await new Promise(resolve => {\n      setTimeout(resolve, 1000);\n    });\n    if (flippedCards[0].image === flippedCards[1].image) {\n      scores = (currentPlayer.player === \"player 1\" ? [++scores[0], scores[1]] : [scores[0], ++scores[1]]);\n      setPoints(scores);\n    } else {\n      cards[refToFlipped[0]].face = false;\n      cards[refToFlipped[1]].face = false;\n    }\n    setRef([]);\n    setCards([]);\n  }\n\n  const checkWinner = () => {\n    if (cards.every(card => card.face === true)) {\n      console.log(scores)\n      if (scores[0] > scores[1]) {\n        background = \"rgba(155,18,44, 0.45)\";\n        return \"Player 1 won\";\n      } else if (scores[1] > scores[0]) {\n        background = \"rgba(121,72,13, 0.45)\";\n        return \"Player 2 won\";\n      }\n      return \"There was a tie\";\n    }\n  }\n\n  const currentStyle = {\n    color: currentPlayer.color\n  }\n\n  const winnerbg ={\n    backgroundColor: background\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Candy Memory</h1>\n      <h3 style={currentStyle}>{`${currentPlayer.player}'s turn`}</h3>\n      <h3><span style={{ color: \"#E3637B\"}}>{points[0]}</span>:<span style={{color: \"#C69559\"}}>{points[1]}</span></h3>\n      <Board cards={cards} flipCard={onFlip} />\n      <div className={winner ? 'winner disp': 'winner'} style ={winnerbg} >\n        <p style ={{fontSize:\"56px\"}}>GAME OVER</p>\n        <p>{winner}</p>\n        <button onClick = {() => window.location.reload()}>Play again!</button>\n      </div>\n      <div className=\"foot\">Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n    </div>\n  )\n}\nApp.propTypes = {\n  cards: PropTypes.array\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}